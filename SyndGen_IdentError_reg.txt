module SyndGen_IdentError_reg(clk,Data_in,SBC_in,SBP_in,Data_out,SBC_out,SBP_out);
  input clk;
  input [31:0] Data_in;
  input [19:0] SBC_in;
  input [7:0] SBP_in;
  output reg [31:0] Data_out;
  output reg [19:0] SBC_out;
  output reg [7:0] SBP_out;
  
  always @ (posedge clk)
    begin
      assign Data_out = Data_in;
    assign SBC_out = SBC_in;
    assign SBP_out = SBP_in;
    end
endmodule

/////////////////

module testbench_SyndGen_IdentError;
  reg [31:0]Data_in_t;
  reg clk_t;
  reg [19:0]SBC_in_t;
  reg [7:0]SBP_in_t;
  wire[19:0]SBC_out_t;
  wire[7:0]SBP_out_t;
  wire [31:0]Data_out_t;
  SyndGen_IdentError_reg dec1(clk_t,Data_in_t,SBC_in_t,SBP_in_t,Data_out_t,SBC_out_t,SBP_out_t);
  initial clk_t=0;
  always #20 clk_t=~clk_t;

    integer i,j;
  initial
    begin
      for(i=0;i<32;i=i+1)begin
        #20 Data_in_t[i]=($random)%2;end 
      for(i=1;i<=32;i=i+1)begin
        #5 $write("%b",Data_in_t[i-1]);
        if(i%8==0 & i!=0)begin
          #5 $write("  must equal  ");
          for(j=8;j>0;j=j-1)begin
            #5 $write("%b",Data_out_t[i-j]);
            if(j==1)begin
              #5 $display(".");end
          end
        end
      end
      #5 $display(".");
      for(i=0;i<20;i=i+1)begin
        #20 SBC_in_t[i]=($random)%2;end
      for(i=0;i<20;i=i+1)begin
        #5 $display("SBC_IN[%1d]=%b must equal SBC_OUT[%1d]=%b",i,SBC_in_t[i],i,SBC_out_t[i]);
      end
      for(i=0;i<8;i=i+1)begin
        #20 SBP_in_t[i]=($random)%2;end
      for(i=0;i<8;i=i+1)begin
        #20 $display("SBP_IN[%1d]=%b must equal SBP_OUT[%1d]=%b ",i,SBP_in_t[i],i,SBP_out_t[i]);
      end
      #1000 $finish;
    end
endmodule